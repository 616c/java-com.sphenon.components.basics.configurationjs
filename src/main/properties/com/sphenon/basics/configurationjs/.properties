
com.sphenon.basics.configurationjs.RegularExpressionLibrary.1=jsppreloc;\
::\\*\\[([^\\]]+)\\]'(//[^']*)'\\*'(//[^']*)'=(ObjectIterable.create(context, Locator.resolve(context, '$2', $1)).setExpressionStrings(context, [ "js:Locator.resolve(context, '$3', current)" ]));\
::\\*'(//[^']*)'\\*'(//[^']*)'=(ObjectIterable.create(context, Locator.resolve(context, '$1', current_scope)).setExpressionStrings(context, [ "js:Locator.resolve(context, '$2', current)" ]));\
::\\*\\[([^\\]]+)\\]'([^']*)'\\*'([^']*)'=(ObjectIterable.create(context, Locator.resolve(context, '//Property/$2', $1)).setExpressionStrings(context, [ "js:Locator.resolve(context, '//Property/$3', current)" ]));\
::\\*'([^']*)'\\*'([^']*)'=(ObjectIterable.create(context, Locator.resolve(context, '//Property/$1', current_scope)).setExpressionStrings(context, [ "js:Locator.resolve(context, '//Property/$2', current)" ]));\
::\\*\\[([^\\]]+)\\]"(//[^"]*)"\\*"(//[^"]*)"=(ObjectIterable.create(context, Locator.resolve(context, "$2", $1)).setExpressionStrings(context, [ 'js:Locator.resolve(context, "$3", current)' ]));\
::\\*"(//[^"]*)"\\*"(//[^"]*)"=(ObjectIterable.create(context, Locator.resolve(context, "$1", current_scope)).setExpressionStrings(context, [ 'js:Locator.resolve(context, "$2", current)' ]));\
::\\*\\[([^\\]]+)\\]"([^"]*)"\\*"([^"]*)"=(ObjectIterable.create(context, Locator.resolve(context, "//Property/$2", $1)).setExpressionStrings(context, [ 'js:Locator.resolve(context, "//Property/$3", current)' ]));\
::\\*"([^"]*)"\\*"([^"]*)"=(ObjectIterable.create(context, Locator.resolve(context, "//Property/$1", current_scope)).setExpressionStrings(context, [ 'js:Locator.resolve(context, "//Property/$2", current)' ]));\
::\\*\\[([^\\]]+)\\]'(//[^']*)'=(ObjectIterable.create(context, Locator.resolve(context, '$2', $1)));\
::\\*'(//[^']*)'=(ObjectIterable.create(context, Locator.resolve(context, '$1', current_scope)));\
::\\*\\[([^\\]]+)\\]'([^']*)'=(ObjectIterable.create(context, Locator.resolve(context, '//Property/$2', $1)));\
::\\*'([^']*)'=(ObjectIterable.create(context, Locator.resolve(context, '//Property/$1', current_scope)));\
::\\*\\[([^\\]]+)\\]"(//[^"]*)"=(ObjectIterable.create(context, Locator.resolve(context, "$2", $1)));\
::\\*"(//[^"]*)"=(ObjectIterable.create(context, Locator.resolve(context, "$1", current_scope)));\
::\\*\\[([^\\]]+)\\]"([^"]*)"=(ObjectIterable.create(context, Locator.resolve(context, "//Property/$2", $1)));\
::\\*"([^"]*)"=(ObjectIterable.create(context, Locator.resolve(context, "//Property/$1", current_scope)));\
::\\[([^\\]]+)\\]'(//[^']*)'=Locator.resolve(context, '$2', $1);\
::'(//[^']*)'=Locator.resolve(context, '$1', current_scope);\
::\\[([^\\]]+)\\]'([^']*)'=Locator.resolve(context, '//Property/$2', $1);\
::'([^']*)'=Locator.resolve(context, '//Property/$1', current_scope);\
::\\[([^\\]]+)\\]"(//[^"]*)"=Locator.resolve(context, "$2", $1);\
::"(//[^"]*)"=Locator.resolve(context, "$1", current_scope);\
::\\[([^\\]]+)\\]"([^"]*)"=Locator.resolve(context, "//Property/$2", $1);\
::"([^"]*)"=Locator.resolve(context, "//Property/$1", current_scope);\
\\{\\*<([A-Za-z0-9_.]+)>\\[([^\\]]+)\\](.*)\\*\\}=(($1)Expression.evaluate(context, \"$3\",null,$2));\
\\{\\*\\[([^\\]]+)\\](.*)\\*\\}=Expression.evaluate(context, \"$2\",null,$1);\
\\{\\*<([A-Za-z0-9_.]+)>(.*)\\*\\}=(($1)Expression.evaluate(context, \"$2\"));\
\\{\\*(.*)\\*\\}=Expression.evaluate(context, \"$1\");\
%%%%\\(=Encoding.recodeByString(context, ;\
%%\\(=Encoding.recode(context, ;\
%%\\.=Encoding.;\
\u00B0\u00B0\\(([A-Za-z0-9_-]+(?:\\.[A-Za-z0-9_-]+)*)\\.([A-Za-z0-9_-]+)[/,]([^\u00B0]+)\\)\u00B0\u00B0=Configuration.get(context, "$1", "$2", $3);\
\u00B0\u00B0([A-Za-z0-9_-]+(?:\\.[A-Za-z0-9_-]+)*)\\.([A-Za-z0-9_-]+)[/,]([^\u00B0]+)\u00B0\u00B0=Configuration.get(context, "$1", "$2", $3);\
\u00B0\u00B0\\(\\.([A-Za-z0-9_-]+(?:\\.[A-Za-z0-9_-]+)*)[/,]([^\u00B0]+)\\)\u00B0\u00B0=config.get(context, "$1", $2);\
\u00B0\u00B0\\.([A-Za-z0-9_-]+(?:\\.[A-Za-z0-9_-]+)*)[/,]([^\u00B0]+)\u00B0\u00B0=config.get(context, "$1", $2)


# a la 'memberaccess', properties in xmodel
# @(x.y.z)
# { var t; (t=x) == null ? null : (t=t.gety(c)) == null ? null : (t=t.getz(c)) == null ? null : t }


# \u00B0 = °

com.sphenon.basics.configurationjs.RegularExpressionLibrary.2=jsppreoptvar;\\$\\{([A-Za-z0-9_]+),([^\\}]+)\\}=((((typeof $1)=='undefined')||($1==null))?($2):($1));\\$\\{([A-Za-z0-9_]+):([A-Za-z0-9_|]+),([^\\}]+)\\}=((((typeof $1).match(/$2/))||($1!=null))?($1):($3))

# com.sphenon.basics.configurationjs.RegularExpressionLibrary.3=cus2ascii;\u24CD=XPath;\u24C5=Property;\u2726=XModel;\u24BB=File;\u24C8=SQL;\u2016=::;\u2261=.equals;\u2318=%%;\u26A1=\u00B0\u00B0;\u2386=placeholder;\u2228=||;\u2227=&amp%3B&amp%3B;\u227A=<;\u227B=>;\u2400=null;\u2714=true;\u2718=false;\u02EE=";\u27E6(<[A-Za-z0-9_.]+>)?(\\[[^\\]]+\\])?={*$1$2unicode,evaluate:;\u27E7=*};\u231A\\(=com.sphenon.basics.system.SystemUtilities.getDate(context, ;\u233E\\(=com.sphenon.basics.system.SystemUtilities.format(context, ;\u2300\\(=com.sphenon.basics.system.MathUtilities.average(context, ;\u220F\\(=com.sphenon.basics.system.MathUtilities.product(context, ;\u2211\\(=com.sphenon.basics.system.MathUtilities.sum(context, ;\u2912\\(=com.sphenon.basics.system.MathUtilities.minimum(context, ;\u2913\\(=com.sphenon.basics.system.MathUtilities.maximum(context, 
# Ⓧ 24CD XPath
# Ⓟ 24C5 Property
# ✦ 2726 XModel
# Ⓕ 24BB File
# Ⓢ 24C8 SQL
# ‖ 2016 ::
# ≡ 2261 .equals
# ⌘ 2318 %%
# ⚡ 26A1 \u00B0\u00B0
# ⎆ 2386 placeholder
# ∨ 2228 ||
# ∧ 2227 &amp;&amp;
# ≺ 227A <
# ≻ 227B >
# ␀ 2400 null
# ✔ 2714 true
# ✘ 2718 false
# ˮ 02EE "
# ⁗ 2057 emptyString
# ␀⁗     nullString
# ⟦ 27E6
# ⟧ 27E7
# ⌚ 231A
# ⌾ 233E
# ⌀ 2300
# ∏ 220F
# ∑ 2211
# ⤒ 2912
# ⤓ 2913

com.sphenon.basics.configurationjs.ExpressionEvaluator_Sequence.1=jspp=jsppreloc,jsppreoptvar,js
com.sphenon.basics.configurationjs.ExpressionEvaluator_Sequence.2=jsppuc=unicodejs,jspp
com.sphenon.basics.configurationjs.DynamicStringProcessor_Sequence.1=jspp=jsppreloc,jsppreoptvar,js
com.sphenon.basics.configurationjs.DynamicStringProcessor_Sequence.2=jsppuc=unicodejs,jspp

